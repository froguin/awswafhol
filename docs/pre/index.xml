<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>실습 환경 구성 on AWS WAF Workshop</title>
    <link>/pre.html</link>
    <description>Recent content in 실습 환경 구성 on AWS WAF Workshop</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <lastBuildDate>Tue, 15 Oct 2019 15:09:31 +0900</lastBuildDate>
    
	<atom:link href="/pre/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>DVWA 설치</title>
      <link>/pre/module1.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/pre/module1.html</guid>
      <description>취약한 웹 서비스 환경 구성 이번 모듈에서는 위협 요인이 내재된 환경을 구성하기 위해 CloudFormation을 실행합니다. CloudFormation을 통해 다음과 같은 AWS 리소스가 생성됩니다.
   AWS 서비스 유형 리소스명 기타     EC2 인스턴스 WAFLab-WebServerInstance t2.micro   ALB MyDVW-Appli-xxxxxx -   VPC VPC 10.10.0.0/16   VPC Subnet PublicSubnet 10.10.0.0/18   VPC Subnet PrivateSubnet 10.10.64.0/18   Kinesis Firehose aws-waf-logs-test AWS WAF 로그 스트림   S3 Bucket mydvwa-xxxxxxxx AWS WAF 로그 버킷    |기타 서비스| Elastic IP, Route table, Security Groups, Network ACL, IAM Role 등|</description>
    </item>
    
    <item>
      <title>DVWA 확인</title>
      <link>/pre/module2.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/pre/module2.html</guid>
      <description>DVWA 웹 페이지 접속 확인 DVWA 스택이 정상적으로 생성되었다면 템플릿을 통하여 생성된 DVWA 웹페이지에 정상적으로 접속이 되는지 확인해보도록 하겠습니다.
 AWS Management Console 의 EC2 메뉴하단에 새로운 ALB (Application Load Balancer)가 생성된 것을 확인한 후 해당 ALB 의 DNS 이름을 이용하여 인터넷 브라우져에서 접속합니다.  아래와 같이 DVWA 의 로그인 페이지로 접속이 가능한 것을 확인합니다.  &amp;ldquo;ID = admin&amp;rdquo;, &amp;ldquo;Password = password&amp;rdquo; 를 입력하고 다음과 같이 DVWA 에 정상적으로 로그인이 되는 것을 확인합니다.</description>
    </item>
    
    <item>
      <title>Chrome Extention 설치</title>
      <link>/pre/module3.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/pre/module3.html</guid>
      <description>Browsec VPN 설치 AWS WAF 에서는 국가별 공인 IP 를 기준으로 트래픽을 허용/차단 하는 기능을 제공하고 있습니다. 랩 과정에서 지정된 국가를 차단하는 환경을 가상으로 구성하기위하여 Chrome 에서 사용할 수 있는 &amp;ldquo;Browsec VPN&amp;rdquo; 을 설치하도록 하겠습니다.
 Chrome Store 링크를 클릭한 후 아래와 같이 Browsec Extension 을 선택한 후 &amp;ldquo;Add to Chrome(또는 크롬에 추가)&amp;rdquo; 버튼을 클릭합니다.   아래와 같이 Extension 설치를 확인하는 확인창이 뜨면 &amp;ldquo;Add Extension&amp;rdquo; 을 클릭하여 설치를 계속합니다.</description>
    </item>
    
    <item>
      <title>AWS WAF Web ACL 구성</title>
      <link>/pre/module4.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/pre/module4.html</guid>
      <description>이번에는 웹 공격을 방어하기 위한 AWS WAF 를 구성해보도록 하겠습니다.
AWS WAF 를 구성하는 방법은 여러가지가 있지만 본 실습에서는 Web ACL 을 먼저 생성한 후 이후 모듈 3.과 모듈 4. 에서 각 공격 유형별로 Rule 을 생성하여 Web ACL 에 추가하는 방법을 따르도록 하겠습니다.
현재 AWS WAF 는 기존에 제공되던 AWS WAF 메뉴와 함께 새로운 AWS WAF v2 메뉴가 제공되고 있습니다. 본 실습에서는 AWS WAF v2 를 기준으로 진행되기 때문에 반드시 새로운 AWS WAF 메뉴를 선택하신 후 진행하시기 바랍니다.</description>
    </item>
    
    <item>
      <title>AWS WAF 로깅 활성화</title>
      <link>/pre/module5.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/pre/module5.html</guid>
      <description>AWS WAF는 Amazon Kinesis Firehose를 사용하여 로그를 저장합니다. 이를 통해 Amazon S3, Amazon Redshift 또는 Amazon Elastic Search와 같은 모든 Kinesis Firehose 대상으로 로그를 전달하고 또 분석할 수 있습니다. 웹 ACL에서 요청을 로깅하려면 먼저 Kinesis Data Firehose를 생성해야 하는데, 해당 실습에서는 이미 모듈 1. 에서 CloudFormation 스택을 통해 Kinesis Firehose와 최종 대상인 S3 bucket을 생성했습니다.
이 실습의 로깅 활성화를 한 뒤 모듈 5.에서 로깅 내역을 확인해볼 예정입니다.
 우선 Kinesis Firehose가 잘 생성되었는지 확인해보겠습니다.</description>
    </item>
    
  </channel>
</rss>